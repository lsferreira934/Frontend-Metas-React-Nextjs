{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Desktop\\\\t2s\\\\frontend_t2s_react_next\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Button, Alert, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: '1'\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, reponseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8080/metas/', {\n                method: 'POST',\n                mode: 'cors',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              reponseEnv = _context.sent;\n\n              if (reponseEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: 'error',\n                  message: reponseEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: 'success',\n                  message: reponseEnv.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta nÃ£o pode ser cadastrada , tente mais tarde!'\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastrar Minha Meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"warning\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : '', response.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n      color: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"Nome da meta\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"description\",\n          id: \"description\",\n          placeholder: \"Descri\\xE7\\xE3o da meta\",\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escolha um status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          id: \"status\",\n          onChange: onChangeInput,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Pendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Concretizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        type: \"submit\",\n        disabled: true,\n        children: \"Enviando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cadastrar, \"4Kn21KYR9wivOmfq3O9PHvdimGE=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["C:/Users/leand/Desktop/t2s/frontend_t2s_react_next/pages/cadastrar.js"],"names":["React","useState","Jumbotron","Button","Alert","Form","FormGroup","Label","Input","FormText","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","e","target","value","sendMeta","preventDefault","fetch","method","mode","body","JSON","stringify","headers","res","json","reponseEnv","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Jumbotron,\r\n  Button,\r\n  Alert,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from 'reactstrap';\r\n\r\nfunction Cadastrar() {\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: '1',\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    formSave: false,\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const onChangeInput = (e) => {\r\n    setMeta({ ...meta, [e.target.name]: e.target.value });\r\n  };\r\n  const sendMeta = async (e) => {\r\n    e.preventDefault();\r\n    setResponse({ formSave: true });\r\n    try {\r\n      const res = await fetch('http://localhost:8080/metas/', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      const reponseEnv = await res.json();\r\n\r\n      if (reponseEnv.error) {\r\n        setResponse({\r\n          formSave: false,\r\n          type: 'error',\r\n          message: reponseEnv.message,\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave: false,\r\n          type: 'success',\r\n          message: reponseEnv.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setResponse({\r\n        formSave: false,\r\n        type: 'error',\r\n        message: 'Erro: Meta nÃ£o pode ser cadastrada , tente mais tarde!',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <h1>Cadastrar Minha Meta</h1>\r\n      </Jumbotron>\r\n      <hr />\r\n\r\n      {response.type === 'error' ? (\r\n        <Alert color=\"warning\">\r\n          <p>{response.message}</p>{' '}\r\n        </Alert>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {response.type === 'success' ? (\r\n        <Alert color=\"success\">\r\n          <p>{response.message}</p>{' '}\r\n        </Alert>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      <Form onSubmit={sendMeta}>\r\n        <FormGroup>\r\n          <label>Nome </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"Nome da meta\"\r\n            onChange={onChangeInput}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <label>DescriÃ§Ã£o </label>\r\n          <input\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            placeholder=\"DescriÃ§Ã£o da meta\"\r\n            onChange={onChangeInput}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <label>Escolha um status:</label>\r\n          <select name=\"status\" id=\"status\" onChange={onChangeInput}>\r\n            <option value=\"1\">Pendente</option>\r\n            <option value=\"0\">Concretizado</option>\r\n          </select>\r\n        </FormGroup>\r\n\r\n        {response.formSave ? (\r\n          <Button color=\"success\" type=\"submit\" disabled>\r\n            Enviando\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"success\" type=\"submit\">\r\n            Cadastrar\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastrar;\r\n"]},"metadata":{},"sourceType":"module"}