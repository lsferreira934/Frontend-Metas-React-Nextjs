{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Desktop\\\\t2s\\\\frontend_t2s_react_next\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Button, Alert, Form, FormGroup, Label, Input, Container, FormText } from 'reactstrap';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: '1'\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => {\n    setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sendMeta = async e => {\n    e.preventDefault();\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch('http://localhost:8080/metas/', {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const reponseEnv = await res.json();\n\n      if (reponseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: reponseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'success',\n          message: reponseEnv.message\n        });\n      }\n    } catch (error) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Erro: Meta n√£o pode ser cadastrada , tente mais tarde!'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastrar Minha Meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [response.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : '', response.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome da meta\",\n              sm: 10,\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Descri\\xE7\\xE3o \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"description\",\n              id: \"description\",\n              placeholder: \"Descri\\xE7\\xE3o da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"status\",\n              children: \"Escolha um status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"status\",\n              id: \"status\",\n              onChange: onChangeInput,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Pendente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Concretizado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"submit\",\n            disabled: true,\n            children: \"Enviando\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["C:/Users/leand/Desktop/t2s/frontend_t2s_react_next/pages/cadastrar.js"],"names":["React","useState","Jumbotron","Button","Alert","Form","FormGroup","Label","Input","Container","FormText","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMeta","preventDefault","res","fetch","method","mode","body","JSON","stringify","headers","reponseEnv","json","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Jumbotron,\r\n  Button,\r\n  Alert,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormText,\r\n} from 'reactstrap';\r\n\r\nfunction Cadastrar() {\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: '1',\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    formSave: false,\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const onChangeInput = (e) => {\r\n    setMeta({ ...meta, [e.target.name]: e.target.value });\r\n  };\r\n  const sendMeta = async (e) => {\r\n    e.preventDefault();\r\n    setResponse({ formSave: true });\r\n    try {\r\n      const res = await fetch('http://localhost:8080/metas/', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      const reponseEnv = await res.json();\r\n\r\n      if (reponseEnv.error) {\r\n        setResponse({\r\n          formSave: false,\r\n          type: 'error',\r\n          message: reponseEnv.message,\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave: false,\r\n          type: 'success',\r\n          message: reponseEnv.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setResponse({\r\n        formSave: false,\r\n        type: 'error',\r\n        message: 'Erro: Meta n√£o pode ser cadastrada , tente mais tarde!',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <h1>Cadastrar Minha Meta</h1>\r\n      </Jumbotron>\r\n      <hr />\r\n      <Container>\r\n        {response.type === 'error' ? (\r\n          <Alert color=\"warning\">\r\n            <p>{response.message}</p>{' '}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {response.type === 'success' ? (\r\n          <Alert color=\"success\">\r\n            <p>{response.message}</p>{' '}\r\n          </Alert>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <div>\r\n          <Form onSubmit={sendMeta}>\r\n            <FormGroup>\r\n              <Label for=\"name\">Nome</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Nome da meta\"\r\n                sm={10}\r\n                onChange={onChangeInput}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Descri√ß√£o </Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Descri√ß√£o da meta\"\r\n                onChange={onChangeInput}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"status\">Escolha um status:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"status\"\r\n                id=\"status\"\r\n                onChange={onChangeInput}\r\n              >\r\n                <option value=\"1\">Pendente</option>\r\n                <option value=\"0\">Concretizado</option>\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            {response.formSave ? (\r\n              <Button color=\"success\" type=\"submit\" disabled>\r\n                Enviando\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"success\" type=\"submit\">\r\n                Cadastrar\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastrar;\r\n"]},"metadata":{},"sourceType":"module"}