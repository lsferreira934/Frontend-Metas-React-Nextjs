{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Desktop\\\\t2s\\\\frontend_t2s_react_next\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: '1'\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(meta);\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8080/metas/', {\n                method: 'POST',\n                mode: 'no-cors',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log('Erro: Meta nÃ£o pode ser cadastrada , tente mais tarde!');\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Minha Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"textarea\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Escolha um status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        id: \"status\",\n        onChange: onChangeInput,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Pendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"Concretizado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cadastrar, \"zYRfMUUznOC3GTlOJ5a4gsSM2d0=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["C:/Users/leand/Desktop/t2s/frontend_t2s_react_next/pages/cadastrar.js"],"names":["React","useState","Cadastrar","name","description","status","meta","setMeta","onChangeInput","e","target","value","sendMeta","preventDefault","console","log","fetch","method","mode","body","JSON","stringify","headers","res"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Cadastrar() {\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: '1',\r\n  });\r\n\r\n  const onChangeInput = (e) => {\r\n    setMeta({ ...meta, [e.target.name]: e.target.value });\r\n  };\r\n  const sendMeta = async (e) => {\r\n    e.preventDefault();\r\n    console.log(meta);\r\n    try {\r\n      const res = await fetch('http://localhost:8080/metas/', {\r\n        method: 'POST',\r\n        mode: 'no-cors',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      // const reponseEnv = await res.json();\r\n      // if (reponseEnv.error) {\r\n      //   console.log(reponseEnv.message);\r\n      // } else {\r\n      //   console.log(reponseEnv.message);\r\n      // }\r\n    } catch (error) {\r\n      console.log('Erro: Meta nÃ£o pode ser cadastrada , tente mais tarde!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastrar Minha Meta</h1>\r\n      <hr />\r\n\r\n      <form onSubmit={sendMeta}>\r\n        <label>Nome </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Nome da meta\"\r\n          onChange={onChangeInput}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label>DescriÃ§Ã£o </label>\r\n        <input\r\n          type=\"textarea\"\r\n          name=\"description\"\r\n          id=\"description\"\r\n          placeholder=\"DescriÃ§Ã£o da meta\"\r\n          onChange={onChangeInput}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label>Escolha um status:</label>\r\n        <select name=\"status\" id=\"status\" onChange={onChangeInput}>\r\n          <option value=\"1\">Pendente</option>\r\n          <option value=\"0\">Concretizado</option>\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <button type=\"submit\">Cadastrar</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cadastrar;\r\n"]},"metadata":{},"sourceType":"module"}